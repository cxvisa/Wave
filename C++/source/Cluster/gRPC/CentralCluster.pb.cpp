// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CentralCluster.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "CentralCluster.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace CentralCluster {
class GetClusterInfoMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetClusterInfoMessage>
     _instance;
} _GetClusterInfoMessage_default_instance_;

namespace protobuf_CentralCluster_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClusterInfoMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClusterInfoMessage, clustercreated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClusterInfoMessage, primarynodeipaddress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClusterInfoMessage, primarynodeport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClusterInfoMessage, primarynodelocationid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClusterInfoMessage, primarynodegenericstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClusterInfoMessage, primarynodespecificstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClusterInfoMessage, nsecondarynodes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClusterInfoMessage, secondarynodeipaddresses_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClusterInfoMessage, secondarynodeports_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClusterInfoMessage, secondarynodelocationids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClusterInfoMessage, secondarynodegenericstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClusterInfoMessage, secondarynodespecificstatus_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(GetClusterInfoMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetClusterInfoMessage_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "CentralCluster.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _GetClusterInfoMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetClusterInfoMessage_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024CentralCluster.proto\022\016CentralCluster\"\214"
      "\003\n\025GetClusterInfoMessage\022\026\n\016clusterCreat"
      "ed\030\001 \001(\010\022\034\n\024primaryNodeIpAddress\030\002 \001(\t\022\027"
      "\n\017primaryNodePort\030\003 \001(\007\022\035\n\025primaryNodeLo"
      "cationId\030\004 \001(\007\022 \n\030primaryNodeGenericStat"
      "us\030\005 \001(\t\022!\n\031primaryNodeSpecificStatus\030\006 "
      "\001(\t\022\027\n\017nSecondaryNodes\030\007 \001(\007\022 \n\030secondar"
      "yNodeIpAddresses\030\010 \003(\t\022\032\n\022secondaryNodeP"
      "orts\030\t \003(\007\022 \n\030secondaryNodeLocationIds\030\n"
      " \003(\007\022\"\n\032secondaryNodeGenericStatus\030\013 \003(\t"
      "\022#\n\033secondaryNodeSpecificStatus\030\014 \003(\t2r\n"
      "\016CentralCluster\022`\n\016GetClusterInfo\022%.Cent"
      "ralCluster.GetClusterInfoMessage\032%.Centr"
      "alCluster.GetClusterInfoMessage\"\000b\006proto"
      "3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 561);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "CentralCluster.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_CentralCluster_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetClusterInfoMessage::kClusterCreatedFieldNumber;
const int GetClusterInfoMessage::kPrimaryNodeIpAddressFieldNumber;
const int GetClusterInfoMessage::kPrimaryNodePortFieldNumber;
const int GetClusterInfoMessage::kPrimaryNodeLocationIdFieldNumber;
const int GetClusterInfoMessage::kPrimaryNodeGenericStatusFieldNumber;
const int GetClusterInfoMessage::kPrimaryNodeSpecificStatusFieldNumber;
const int GetClusterInfoMessage::kNSecondaryNodesFieldNumber;
const int GetClusterInfoMessage::kSecondaryNodeIpAddressesFieldNumber;
const int GetClusterInfoMessage::kSecondaryNodePortsFieldNumber;
const int GetClusterInfoMessage::kSecondaryNodeLocationIdsFieldNumber;
const int GetClusterInfoMessage::kSecondaryNodeGenericStatusFieldNumber;
const int GetClusterInfoMessage::kSecondaryNodeSpecificStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetClusterInfoMessage::GetClusterInfoMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_CentralCluster_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CentralCluster.GetClusterInfoMessage)
}
GetClusterInfoMessage::GetClusterInfoMessage(const GetClusterInfoMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      secondarynodeipaddresses_(from.secondarynodeipaddresses_),
      secondarynodeports_(from.secondarynodeports_),
      secondarynodelocationids_(from.secondarynodelocationids_),
      secondarynodegenericstatus_(from.secondarynodegenericstatus_),
      secondarynodespecificstatus_(from.secondarynodespecificstatus_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  primarynodeipaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.primarynodeipaddress().size() > 0) {
    primarynodeipaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.primarynodeipaddress_);
  }
  primarynodegenericstatus_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.primarynodegenericstatus().size() > 0) {
    primarynodegenericstatus_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.primarynodegenericstatus_);
  }
  primarynodespecificstatus_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.primarynodespecificstatus().size() > 0) {
    primarynodespecificstatus_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.primarynodespecificstatus_);
  }
  ::memcpy(&clustercreated_, &from.clustercreated_,
    static_cast<size_t>(reinterpret_cast<char*>(&nsecondarynodes_) -
    reinterpret_cast<char*>(&clustercreated_)) + sizeof(nsecondarynodes_));
  // @@protoc_insertion_point(copy_constructor:CentralCluster.GetClusterInfoMessage)
}

void GetClusterInfoMessage::SharedCtor() {
  primarynodeipaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  primarynodegenericstatus_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  primarynodespecificstatus_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&clustercreated_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nsecondarynodes_) -
      reinterpret_cast<char*>(&clustercreated_)) + sizeof(nsecondarynodes_));
  _cached_size_ = 0;
}

GetClusterInfoMessage::~GetClusterInfoMessage() {
  // @@protoc_insertion_point(destructor:CentralCluster.GetClusterInfoMessage)
  SharedDtor();
}

void GetClusterInfoMessage::SharedDtor() {
  primarynodeipaddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  primarynodegenericstatus_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  primarynodespecificstatus_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetClusterInfoMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetClusterInfoMessage::descriptor() {
  protobuf_CentralCluster_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CentralCluster_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetClusterInfoMessage& GetClusterInfoMessage::default_instance() {
  protobuf_CentralCluster_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetClusterInfoMessage* GetClusterInfoMessage::New(::google::protobuf::Arena* arena) const {
  GetClusterInfoMessage* n = new GetClusterInfoMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetClusterInfoMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:CentralCluster.GetClusterInfoMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  secondarynodeipaddresses_.Clear();
  secondarynodeports_.Clear();
  secondarynodelocationids_.Clear();
  secondarynodegenericstatus_.Clear();
  secondarynodespecificstatus_.Clear();
  primarynodeipaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  primarynodegenericstatus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  primarynodespecificstatus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&clustercreated_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nsecondarynodes_) -
      reinterpret_cast<char*>(&clustercreated_)) + sizeof(nsecondarynodes_));
  _internal_metadata_.Clear();
}

bool GetClusterInfoMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CentralCluster.GetClusterInfoMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool clusterCreated = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &clustercreated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string primaryNodeIpAddress = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_primarynodeipaddress()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->primarynodeipaddress().data(), static_cast<int>(this->primarynodeipaddress().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CentralCluster.GetClusterInfoMessage.primaryNodeIpAddress"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 primaryNodePort = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &primarynodeport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 primaryNodeLocationId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &primarynodelocationid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string primaryNodeGenericStatus = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_primarynodegenericstatus()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->primarynodegenericstatus().data(), static_cast<int>(this->primarynodegenericstatus().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CentralCluster.GetClusterInfoMessage.primaryNodeGenericStatus"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string primaryNodeSpecificStatus = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_primarynodespecificstatus()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->primarynodespecificstatus().data(), static_cast<int>(this->primarynodespecificstatus().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CentralCluster.GetClusterInfoMessage.primaryNodeSpecificStatus"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 nSecondaryNodes = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &nsecondarynodes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string secondaryNodeIpAddresses = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_secondarynodeipaddresses()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->secondarynodeipaddresses(this->secondarynodeipaddresses_size() - 1).data(),
            static_cast<int>(this->secondarynodeipaddresses(this->secondarynodeipaddresses_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CentralCluster.GetClusterInfoMessage.secondaryNodeIpAddresses"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed32 secondaryNodePorts = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_secondarynodeports())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 1, 74u, input, this->mutable_secondarynodeports())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed32 secondaryNodeLocationIds = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_secondarynodelocationids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 1, 82u, input, this->mutable_secondarynodelocationids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string secondaryNodeGenericStatus = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_secondarynodegenericstatus()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->secondarynodegenericstatus(this->secondarynodegenericstatus_size() - 1).data(),
            static_cast<int>(this->secondarynodegenericstatus(this->secondarynodegenericstatus_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CentralCluster.GetClusterInfoMessage.secondaryNodeGenericStatus"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string secondaryNodeSpecificStatus = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_secondarynodespecificstatus()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->secondarynodespecificstatus(this->secondarynodespecificstatus_size() - 1).data(),
            static_cast<int>(this->secondarynodespecificstatus(this->secondarynodespecificstatus_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CentralCluster.GetClusterInfoMessage.secondaryNodeSpecificStatus"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CentralCluster.GetClusterInfoMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CentralCluster.GetClusterInfoMessage)
  return false;
#undef DO_
}

void GetClusterInfoMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CentralCluster.GetClusterInfoMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool clusterCreated = 1;
  if (this->clustercreated() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->clustercreated(), output);
  }

  // string primaryNodeIpAddress = 2;
  if (this->primarynodeipaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->primarynodeipaddress().data(), static_cast<int>(this->primarynodeipaddress().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CentralCluster.GetClusterInfoMessage.primaryNodeIpAddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->primarynodeipaddress(), output);
  }

  // fixed32 primaryNodePort = 3;
  if (this->primarynodeport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(3, this->primarynodeport(), output);
  }

  // fixed32 primaryNodeLocationId = 4;
  if (this->primarynodelocationid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(4, this->primarynodelocationid(), output);
  }

  // string primaryNodeGenericStatus = 5;
  if (this->primarynodegenericstatus().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->primarynodegenericstatus().data(), static_cast<int>(this->primarynodegenericstatus().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CentralCluster.GetClusterInfoMessage.primaryNodeGenericStatus");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->primarynodegenericstatus(), output);
  }

  // string primaryNodeSpecificStatus = 6;
  if (this->primarynodespecificstatus().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->primarynodespecificstatus().data(), static_cast<int>(this->primarynodespecificstatus().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CentralCluster.GetClusterInfoMessage.primaryNodeSpecificStatus");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->primarynodespecificstatus(), output);
  }

  // fixed32 nSecondaryNodes = 7;
  if (this->nsecondarynodes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(7, this->nsecondarynodes(), output);
  }

  // repeated string secondaryNodeIpAddresses = 8;
  for (int i = 0, n = this->secondarynodeipaddresses_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->secondarynodeipaddresses(i).data(), static_cast<int>(this->secondarynodeipaddresses(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CentralCluster.GetClusterInfoMessage.secondaryNodeIpAddresses");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->secondarynodeipaddresses(i), output);
  }

  // repeated fixed32 secondaryNodePorts = 9;
  if (this->secondarynodeports_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _secondarynodeports_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed32Array(
      this->secondarynodeports().data(), this->secondarynodeports_size(), output);
  }

  // repeated fixed32 secondaryNodeLocationIds = 10;
  if (this->secondarynodelocationids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(10, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _secondarynodelocationids_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed32Array(
      this->secondarynodelocationids().data(), this->secondarynodelocationids_size(), output);
  }

  // repeated string secondaryNodeGenericStatus = 11;
  for (int i = 0, n = this->secondarynodegenericstatus_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->secondarynodegenericstatus(i).data(), static_cast<int>(this->secondarynodegenericstatus(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CentralCluster.GetClusterInfoMessage.secondaryNodeGenericStatus");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->secondarynodegenericstatus(i), output);
  }

  // repeated string secondaryNodeSpecificStatus = 12;
  for (int i = 0, n = this->secondarynodespecificstatus_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->secondarynodespecificstatus(i).data(), static_cast<int>(this->secondarynodespecificstatus(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CentralCluster.GetClusterInfoMessage.secondaryNodeSpecificStatus");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->secondarynodespecificstatus(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CentralCluster.GetClusterInfoMessage)
}

::google::protobuf::uint8* GetClusterInfoMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CentralCluster.GetClusterInfoMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool clusterCreated = 1;
  if (this->clustercreated() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->clustercreated(), target);
  }

  // string primaryNodeIpAddress = 2;
  if (this->primarynodeipaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->primarynodeipaddress().data(), static_cast<int>(this->primarynodeipaddress().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CentralCluster.GetClusterInfoMessage.primaryNodeIpAddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->primarynodeipaddress(), target);
  }

  // fixed32 primaryNodePort = 3;
  if (this->primarynodeport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(3, this->primarynodeport(), target);
  }

  // fixed32 primaryNodeLocationId = 4;
  if (this->primarynodelocationid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(4, this->primarynodelocationid(), target);
  }

  // string primaryNodeGenericStatus = 5;
  if (this->primarynodegenericstatus().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->primarynodegenericstatus().data(), static_cast<int>(this->primarynodegenericstatus().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CentralCluster.GetClusterInfoMessage.primaryNodeGenericStatus");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->primarynodegenericstatus(), target);
  }

  // string primaryNodeSpecificStatus = 6;
  if (this->primarynodespecificstatus().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->primarynodespecificstatus().data(), static_cast<int>(this->primarynodespecificstatus().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CentralCluster.GetClusterInfoMessage.primaryNodeSpecificStatus");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->primarynodespecificstatus(), target);
  }

  // fixed32 nSecondaryNodes = 7;
  if (this->nsecondarynodes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(7, this->nsecondarynodes(), target);
  }

  // repeated string secondaryNodeIpAddresses = 8;
  for (int i = 0, n = this->secondarynodeipaddresses_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->secondarynodeipaddresses(i).data(), static_cast<int>(this->secondarynodeipaddresses(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CentralCluster.GetClusterInfoMessage.secondaryNodeIpAddresses");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(8, this->secondarynodeipaddresses(i), target);
  }

  // repeated fixed32 secondaryNodePorts = 9;
  if (this->secondarynodeports_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      9,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _secondarynodeports_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32NoTagToArray(this->secondarynodeports_, target);
  }

  // repeated fixed32 secondaryNodeLocationIds = 10;
  if (this->secondarynodelocationids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      10,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _secondarynodelocationids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32NoTagToArray(this->secondarynodelocationids_, target);
  }

  // repeated string secondaryNodeGenericStatus = 11;
  for (int i = 0, n = this->secondarynodegenericstatus_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->secondarynodegenericstatus(i).data(), static_cast<int>(this->secondarynodegenericstatus(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CentralCluster.GetClusterInfoMessage.secondaryNodeGenericStatus");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(11, this->secondarynodegenericstatus(i), target);
  }

  // repeated string secondaryNodeSpecificStatus = 12;
  for (int i = 0, n = this->secondarynodespecificstatus_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->secondarynodespecificstatus(i).data(), static_cast<int>(this->secondarynodespecificstatus(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CentralCluster.GetClusterInfoMessage.secondaryNodeSpecificStatus");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(12, this->secondarynodespecificstatus(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CentralCluster.GetClusterInfoMessage)
  return target;
}

size_t GetClusterInfoMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CentralCluster.GetClusterInfoMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string secondaryNodeIpAddresses = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->secondarynodeipaddresses_size());
  for (int i = 0, n = this->secondarynodeipaddresses_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->secondarynodeipaddresses(i));
  }

  // repeated fixed32 secondaryNodePorts = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->secondarynodeports_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _secondarynodeports_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated fixed32 secondaryNodeLocationIds = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->secondarynodelocationids_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _secondarynodelocationids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string secondaryNodeGenericStatus = 11;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->secondarynodegenericstatus_size());
  for (int i = 0, n = this->secondarynodegenericstatus_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->secondarynodegenericstatus(i));
  }

  // repeated string secondaryNodeSpecificStatus = 12;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->secondarynodespecificstatus_size());
  for (int i = 0, n = this->secondarynodespecificstatus_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->secondarynodespecificstatus(i));
  }

  // string primaryNodeIpAddress = 2;
  if (this->primarynodeipaddress().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->primarynodeipaddress());
  }

  // string primaryNodeGenericStatus = 5;
  if (this->primarynodegenericstatus().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->primarynodegenericstatus());
  }

  // string primaryNodeSpecificStatus = 6;
  if (this->primarynodespecificstatus().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->primarynodespecificstatus());
  }

  // bool clusterCreated = 1;
  if (this->clustercreated() != 0) {
    total_size += 1 + 1;
  }

  // fixed32 primaryNodePort = 3;
  if (this->primarynodeport() != 0) {
    total_size += 1 + 4;
  }

  // fixed32 primaryNodeLocationId = 4;
  if (this->primarynodelocationid() != 0) {
    total_size += 1 + 4;
  }

  // fixed32 nSecondaryNodes = 7;
  if (this->nsecondarynodes() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetClusterInfoMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CentralCluster.GetClusterInfoMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const GetClusterInfoMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetClusterInfoMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CentralCluster.GetClusterInfoMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CentralCluster.GetClusterInfoMessage)
    MergeFrom(*source);
  }
}

void GetClusterInfoMessage::MergeFrom(const GetClusterInfoMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CentralCluster.GetClusterInfoMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  secondarynodeipaddresses_.MergeFrom(from.secondarynodeipaddresses_);
  secondarynodeports_.MergeFrom(from.secondarynodeports_);
  secondarynodelocationids_.MergeFrom(from.secondarynodelocationids_);
  secondarynodegenericstatus_.MergeFrom(from.secondarynodegenericstatus_);
  secondarynodespecificstatus_.MergeFrom(from.secondarynodespecificstatus_);
  if (from.primarynodeipaddress().size() > 0) {

    primarynodeipaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.primarynodeipaddress_);
  }
  if (from.primarynodegenericstatus().size() > 0) {

    primarynodegenericstatus_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.primarynodegenericstatus_);
  }
  if (from.primarynodespecificstatus().size() > 0) {

    primarynodespecificstatus_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.primarynodespecificstatus_);
  }
  if (from.clustercreated() != 0) {
    set_clustercreated(from.clustercreated());
  }
  if (from.primarynodeport() != 0) {
    set_primarynodeport(from.primarynodeport());
  }
  if (from.primarynodelocationid() != 0) {
    set_primarynodelocationid(from.primarynodelocationid());
  }
  if (from.nsecondarynodes() != 0) {
    set_nsecondarynodes(from.nsecondarynodes());
  }
}

void GetClusterInfoMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CentralCluster.GetClusterInfoMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetClusterInfoMessage::CopyFrom(const GetClusterInfoMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CentralCluster.GetClusterInfoMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetClusterInfoMessage::IsInitialized() const {
  return true;
}

void GetClusterInfoMessage::Swap(GetClusterInfoMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetClusterInfoMessage::InternalSwap(GetClusterInfoMessage* other) {
  using std::swap;
  secondarynodeipaddresses_.InternalSwap(&other->secondarynodeipaddresses_);
  secondarynodeports_.InternalSwap(&other->secondarynodeports_);
  secondarynodelocationids_.InternalSwap(&other->secondarynodelocationids_);
  secondarynodegenericstatus_.InternalSwap(&other->secondarynodegenericstatus_);
  secondarynodespecificstatus_.InternalSwap(&other->secondarynodespecificstatus_);
  primarynodeipaddress_.Swap(&other->primarynodeipaddress_);
  primarynodegenericstatus_.Swap(&other->primarynodegenericstatus_);
  primarynodespecificstatus_.Swap(&other->primarynodespecificstatus_);
  swap(clustercreated_, other->clustercreated_);
  swap(primarynodeport_, other->primarynodeport_);
  swap(primarynodelocationid_, other->primarynodelocationid_);
  swap(nsecondarynodes_, other->nsecondarynodes_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetClusterInfoMessage::GetMetadata() const {
  protobuf_CentralCluster_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CentralCluster_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetClusterInfoMessage

// bool clusterCreated = 1;
void GetClusterInfoMessage::clear_clustercreated() {
  clustercreated_ = false;
}
bool GetClusterInfoMessage::clustercreated() const {
  // @@protoc_insertion_point(field_get:CentralCluster.GetClusterInfoMessage.clusterCreated)
  return clustercreated_;
}
void GetClusterInfoMessage::set_clustercreated(bool value) {
  
  clustercreated_ = value;
  // @@protoc_insertion_point(field_set:CentralCluster.GetClusterInfoMessage.clusterCreated)
}

// string primaryNodeIpAddress = 2;
void GetClusterInfoMessage::clear_primarynodeipaddress() {
  primarynodeipaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetClusterInfoMessage::primarynodeipaddress() const {
  // @@protoc_insertion_point(field_get:CentralCluster.GetClusterInfoMessage.primaryNodeIpAddress)
  return primarynodeipaddress_.GetNoArena();
}
void GetClusterInfoMessage::set_primarynodeipaddress(const ::std::string& value) {
  
  primarynodeipaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CentralCluster.GetClusterInfoMessage.primaryNodeIpAddress)
}
#if LANG_CXX11
void GetClusterInfoMessage::set_primarynodeipaddress(::std::string&& value) {
  
  primarynodeipaddress_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CentralCluster.GetClusterInfoMessage.primaryNodeIpAddress)
}
#endif
void GetClusterInfoMessage::set_primarynodeipaddress(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  primarynodeipaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CentralCluster.GetClusterInfoMessage.primaryNodeIpAddress)
}
void GetClusterInfoMessage::set_primarynodeipaddress(const char* value, size_t size) {
  
  primarynodeipaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CentralCluster.GetClusterInfoMessage.primaryNodeIpAddress)
}
::std::string* GetClusterInfoMessage::mutable_primarynodeipaddress() {
  
  // @@protoc_insertion_point(field_mutable:CentralCluster.GetClusterInfoMessage.primaryNodeIpAddress)
  return primarynodeipaddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetClusterInfoMessage::release_primarynodeipaddress() {
  // @@protoc_insertion_point(field_release:CentralCluster.GetClusterInfoMessage.primaryNodeIpAddress)
  
  return primarynodeipaddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetClusterInfoMessage::set_allocated_primarynodeipaddress(::std::string* primarynodeipaddress) {
  if (primarynodeipaddress != NULL) {
    
  } else {
    
  }
  primarynodeipaddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), primarynodeipaddress);
  // @@protoc_insertion_point(field_set_allocated:CentralCluster.GetClusterInfoMessage.primaryNodeIpAddress)
}

// fixed32 primaryNodePort = 3;
void GetClusterInfoMessage::clear_primarynodeport() {
  primarynodeport_ = 0u;
}
::google::protobuf::uint32 GetClusterInfoMessage::primarynodeport() const {
  // @@protoc_insertion_point(field_get:CentralCluster.GetClusterInfoMessage.primaryNodePort)
  return primarynodeport_;
}
void GetClusterInfoMessage::set_primarynodeport(::google::protobuf::uint32 value) {
  
  primarynodeport_ = value;
  // @@protoc_insertion_point(field_set:CentralCluster.GetClusterInfoMessage.primaryNodePort)
}

// fixed32 primaryNodeLocationId = 4;
void GetClusterInfoMessage::clear_primarynodelocationid() {
  primarynodelocationid_ = 0u;
}
::google::protobuf::uint32 GetClusterInfoMessage::primarynodelocationid() const {
  // @@protoc_insertion_point(field_get:CentralCluster.GetClusterInfoMessage.primaryNodeLocationId)
  return primarynodelocationid_;
}
void GetClusterInfoMessage::set_primarynodelocationid(::google::protobuf::uint32 value) {
  
  primarynodelocationid_ = value;
  // @@protoc_insertion_point(field_set:CentralCluster.GetClusterInfoMessage.primaryNodeLocationId)
}

// string primaryNodeGenericStatus = 5;
void GetClusterInfoMessage::clear_primarynodegenericstatus() {
  primarynodegenericstatus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetClusterInfoMessage::primarynodegenericstatus() const {
  // @@protoc_insertion_point(field_get:CentralCluster.GetClusterInfoMessage.primaryNodeGenericStatus)
  return primarynodegenericstatus_.GetNoArena();
}
void GetClusterInfoMessage::set_primarynodegenericstatus(const ::std::string& value) {
  
  primarynodegenericstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CentralCluster.GetClusterInfoMessage.primaryNodeGenericStatus)
}
#if LANG_CXX11
void GetClusterInfoMessage::set_primarynodegenericstatus(::std::string&& value) {
  
  primarynodegenericstatus_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CentralCluster.GetClusterInfoMessage.primaryNodeGenericStatus)
}
#endif
void GetClusterInfoMessage::set_primarynodegenericstatus(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  primarynodegenericstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CentralCluster.GetClusterInfoMessage.primaryNodeGenericStatus)
}
void GetClusterInfoMessage::set_primarynodegenericstatus(const char* value, size_t size) {
  
  primarynodegenericstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CentralCluster.GetClusterInfoMessage.primaryNodeGenericStatus)
}
::std::string* GetClusterInfoMessage::mutable_primarynodegenericstatus() {
  
  // @@protoc_insertion_point(field_mutable:CentralCluster.GetClusterInfoMessage.primaryNodeGenericStatus)
  return primarynodegenericstatus_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetClusterInfoMessage::release_primarynodegenericstatus() {
  // @@protoc_insertion_point(field_release:CentralCluster.GetClusterInfoMessage.primaryNodeGenericStatus)
  
  return primarynodegenericstatus_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetClusterInfoMessage::set_allocated_primarynodegenericstatus(::std::string* primarynodegenericstatus) {
  if (primarynodegenericstatus != NULL) {
    
  } else {
    
  }
  primarynodegenericstatus_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), primarynodegenericstatus);
  // @@protoc_insertion_point(field_set_allocated:CentralCluster.GetClusterInfoMessage.primaryNodeGenericStatus)
}

// string primaryNodeSpecificStatus = 6;
void GetClusterInfoMessage::clear_primarynodespecificstatus() {
  primarynodespecificstatus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetClusterInfoMessage::primarynodespecificstatus() const {
  // @@protoc_insertion_point(field_get:CentralCluster.GetClusterInfoMessage.primaryNodeSpecificStatus)
  return primarynodespecificstatus_.GetNoArena();
}
void GetClusterInfoMessage::set_primarynodespecificstatus(const ::std::string& value) {
  
  primarynodespecificstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CentralCluster.GetClusterInfoMessage.primaryNodeSpecificStatus)
}
#if LANG_CXX11
void GetClusterInfoMessage::set_primarynodespecificstatus(::std::string&& value) {
  
  primarynodespecificstatus_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CentralCluster.GetClusterInfoMessage.primaryNodeSpecificStatus)
}
#endif
void GetClusterInfoMessage::set_primarynodespecificstatus(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  primarynodespecificstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CentralCluster.GetClusterInfoMessage.primaryNodeSpecificStatus)
}
void GetClusterInfoMessage::set_primarynodespecificstatus(const char* value, size_t size) {
  
  primarynodespecificstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CentralCluster.GetClusterInfoMessage.primaryNodeSpecificStatus)
}
::std::string* GetClusterInfoMessage::mutable_primarynodespecificstatus() {
  
  // @@protoc_insertion_point(field_mutable:CentralCluster.GetClusterInfoMessage.primaryNodeSpecificStatus)
  return primarynodespecificstatus_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetClusterInfoMessage::release_primarynodespecificstatus() {
  // @@protoc_insertion_point(field_release:CentralCluster.GetClusterInfoMessage.primaryNodeSpecificStatus)
  
  return primarynodespecificstatus_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetClusterInfoMessage::set_allocated_primarynodespecificstatus(::std::string* primarynodespecificstatus) {
  if (primarynodespecificstatus != NULL) {
    
  } else {
    
  }
  primarynodespecificstatus_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), primarynodespecificstatus);
  // @@protoc_insertion_point(field_set_allocated:CentralCluster.GetClusterInfoMessage.primaryNodeSpecificStatus)
}

// fixed32 nSecondaryNodes = 7;
void GetClusterInfoMessage::clear_nsecondarynodes() {
  nsecondarynodes_ = 0u;
}
::google::protobuf::uint32 GetClusterInfoMessage::nsecondarynodes() const {
  // @@protoc_insertion_point(field_get:CentralCluster.GetClusterInfoMessage.nSecondaryNodes)
  return nsecondarynodes_;
}
void GetClusterInfoMessage::set_nsecondarynodes(::google::protobuf::uint32 value) {
  
  nsecondarynodes_ = value;
  // @@protoc_insertion_point(field_set:CentralCluster.GetClusterInfoMessage.nSecondaryNodes)
}

// repeated string secondaryNodeIpAddresses = 8;
int GetClusterInfoMessage::secondarynodeipaddresses_size() const {
  return secondarynodeipaddresses_.size();
}
void GetClusterInfoMessage::clear_secondarynodeipaddresses() {
  secondarynodeipaddresses_.Clear();
}
const ::std::string& GetClusterInfoMessage::secondarynodeipaddresses(int index) const {
  // @@protoc_insertion_point(field_get:CentralCluster.GetClusterInfoMessage.secondaryNodeIpAddresses)
  return secondarynodeipaddresses_.Get(index);
}
::std::string* GetClusterInfoMessage::mutable_secondarynodeipaddresses(int index) {
  // @@protoc_insertion_point(field_mutable:CentralCluster.GetClusterInfoMessage.secondaryNodeIpAddresses)
  return secondarynodeipaddresses_.Mutable(index);
}
void GetClusterInfoMessage::set_secondarynodeipaddresses(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CentralCluster.GetClusterInfoMessage.secondaryNodeIpAddresses)
  secondarynodeipaddresses_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void GetClusterInfoMessage::set_secondarynodeipaddresses(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:CentralCluster.GetClusterInfoMessage.secondaryNodeIpAddresses)
  secondarynodeipaddresses_.Mutable(index)->assign(std::move(value));
}
#endif
void GetClusterInfoMessage::set_secondarynodeipaddresses(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  secondarynodeipaddresses_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CentralCluster.GetClusterInfoMessage.secondaryNodeIpAddresses)
}
void GetClusterInfoMessage::set_secondarynodeipaddresses(int index, const char* value, size_t size) {
  secondarynodeipaddresses_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CentralCluster.GetClusterInfoMessage.secondaryNodeIpAddresses)
}
::std::string* GetClusterInfoMessage::add_secondarynodeipaddresses() {
  // @@protoc_insertion_point(field_add_mutable:CentralCluster.GetClusterInfoMessage.secondaryNodeIpAddresses)
  return secondarynodeipaddresses_.Add();
}
void GetClusterInfoMessage::add_secondarynodeipaddresses(const ::std::string& value) {
  secondarynodeipaddresses_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CentralCluster.GetClusterInfoMessage.secondaryNodeIpAddresses)
}
#if LANG_CXX11
void GetClusterInfoMessage::add_secondarynodeipaddresses(::std::string&& value) {
  secondarynodeipaddresses_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:CentralCluster.GetClusterInfoMessage.secondaryNodeIpAddresses)
}
#endif
void GetClusterInfoMessage::add_secondarynodeipaddresses(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  secondarynodeipaddresses_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CentralCluster.GetClusterInfoMessage.secondaryNodeIpAddresses)
}
void GetClusterInfoMessage::add_secondarynodeipaddresses(const char* value, size_t size) {
  secondarynodeipaddresses_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CentralCluster.GetClusterInfoMessage.secondaryNodeIpAddresses)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
GetClusterInfoMessage::secondarynodeipaddresses() const {
  // @@protoc_insertion_point(field_list:CentralCluster.GetClusterInfoMessage.secondaryNodeIpAddresses)
  return secondarynodeipaddresses_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
GetClusterInfoMessage::mutable_secondarynodeipaddresses() {
  // @@protoc_insertion_point(field_mutable_list:CentralCluster.GetClusterInfoMessage.secondaryNodeIpAddresses)
  return &secondarynodeipaddresses_;
}

// repeated fixed32 secondaryNodePorts = 9;
int GetClusterInfoMessage::secondarynodeports_size() const {
  return secondarynodeports_.size();
}
void GetClusterInfoMessage::clear_secondarynodeports() {
  secondarynodeports_.Clear();
}
::google::protobuf::uint32 GetClusterInfoMessage::secondarynodeports(int index) const {
  // @@protoc_insertion_point(field_get:CentralCluster.GetClusterInfoMessage.secondaryNodePorts)
  return secondarynodeports_.Get(index);
}
void GetClusterInfoMessage::set_secondarynodeports(int index, ::google::protobuf::uint32 value) {
  secondarynodeports_.Set(index, value);
  // @@protoc_insertion_point(field_set:CentralCluster.GetClusterInfoMessage.secondaryNodePorts)
}
void GetClusterInfoMessage::add_secondarynodeports(::google::protobuf::uint32 value) {
  secondarynodeports_.Add(value);
  // @@protoc_insertion_point(field_add:CentralCluster.GetClusterInfoMessage.secondaryNodePorts)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetClusterInfoMessage::secondarynodeports() const {
  // @@protoc_insertion_point(field_list:CentralCluster.GetClusterInfoMessage.secondaryNodePorts)
  return secondarynodeports_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetClusterInfoMessage::mutable_secondarynodeports() {
  // @@protoc_insertion_point(field_mutable_list:CentralCluster.GetClusterInfoMessage.secondaryNodePorts)
  return &secondarynodeports_;
}

// repeated fixed32 secondaryNodeLocationIds = 10;
int GetClusterInfoMessage::secondarynodelocationids_size() const {
  return secondarynodelocationids_.size();
}
void GetClusterInfoMessage::clear_secondarynodelocationids() {
  secondarynodelocationids_.Clear();
}
::google::protobuf::uint32 GetClusterInfoMessage::secondarynodelocationids(int index) const {
  // @@protoc_insertion_point(field_get:CentralCluster.GetClusterInfoMessage.secondaryNodeLocationIds)
  return secondarynodelocationids_.Get(index);
}
void GetClusterInfoMessage::set_secondarynodelocationids(int index, ::google::protobuf::uint32 value) {
  secondarynodelocationids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CentralCluster.GetClusterInfoMessage.secondaryNodeLocationIds)
}
void GetClusterInfoMessage::add_secondarynodelocationids(::google::protobuf::uint32 value) {
  secondarynodelocationids_.Add(value);
  // @@protoc_insertion_point(field_add:CentralCluster.GetClusterInfoMessage.secondaryNodeLocationIds)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetClusterInfoMessage::secondarynodelocationids() const {
  // @@protoc_insertion_point(field_list:CentralCluster.GetClusterInfoMessage.secondaryNodeLocationIds)
  return secondarynodelocationids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetClusterInfoMessage::mutable_secondarynodelocationids() {
  // @@protoc_insertion_point(field_mutable_list:CentralCluster.GetClusterInfoMessage.secondaryNodeLocationIds)
  return &secondarynodelocationids_;
}

// repeated string secondaryNodeGenericStatus = 11;
int GetClusterInfoMessage::secondarynodegenericstatus_size() const {
  return secondarynodegenericstatus_.size();
}
void GetClusterInfoMessage::clear_secondarynodegenericstatus() {
  secondarynodegenericstatus_.Clear();
}
const ::std::string& GetClusterInfoMessage::secondarynodegenericstatus(int index) const {
  // @@protoc_insertion_point(field_get:CentralCluster.GetClusterInfoMessage.secondaryNodeGenericStatus)
  return secondarynodegenericstatus_.Get(index);
}
::std::string* GetClusterInfoMessage::mutable_secondarynodegenericstatus(int index) {
  // @@protoc_insertion_point(field_mutable:CentralCluster.GetClusterInfoMessage.secondaryNodeGenericStatus)
  return secondarynodegenericstatus_.Mutable(index);
}
void GetClusterInfoMessage::set_secondarynodegenericstatus(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CentralCluster.GetClusterInfoMessage.secondaryNodeGenericStatus)
  secondarynodegenericstatus_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void GetClusterInfoMessage::set_secondarynodegenericstatus(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:CentralCluster.GetClusterInfoMessage.secondaryNodeGenericStatus)
  secondarynodegenericstatus_.Mutable(index)->assign(std::move(value));
}
#endif
void GetClusterInfoMessage::set_secondarynodegenericstatus(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  secondarynodegenericstatus_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CentralCluster.GetClusterInfoMessage.secondaryNodeGenericStatus)
}
void GetClusterInfoMessage::set_secondarynodegenericstatus(int index, const char* value, size_t size) {
  secondarynodegenericstatus_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CentralCluster.GetClusterInfoMessage.secondaryNodeGenericStatus)
}
::std::string* GetClusterInfoMessage::add_secondarynodegenericstatus() {
  // @@protoc_insertion_point(field_add_mutable:CentralCluster.GetClusterInfoMessage.secondaryNodeGenericStatus)
  return secondarynodegenericstatus_.Add();
}
void GetClusterInfoMessage::add_secondarynodegenericstatus(const ::std::string& value) {
  secondarynodegenericstatus_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CentralCluster.GetClusterInfoMessage.secondaryNodeGenericStatus)
}
#if LANG_CXX11
void GetClusterInfoMessage::add_secondarynodegenericstatus(::std::string&& value) {
  secondarynodegenericstatus_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:CentralCluster.GetClusterInfoMessage.secondaryNodeGenericStatus)
}
#endif
void GetClusterInfoMessage::add_secondarynodegenericstatus(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  secondarynodegenericstatus_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CentralCluster.GetClusterInfoMessage.secondaryNodeGenericStatus)
}
void GetClusterInfoMessage::add_secondarynodegenericstatus(const char* value, size_t size) {
  secondarynodegenericstatus_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CentralCluster.GetClusterInfoMessage.secondaryNodeGenericStatus)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
GetClusterInfoMessage::secondarynodegenericstatus() const {
  // @@protoc_insertion_point(field_list:CentralCluster.GetClusterInfoMessage.secondaryNodeGenericStatus)
  return secondarynodegenericstatus_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
GetClusterInfoMessage::mutable_secondarynodegenericstatus() {
  // @@protoc_insertion_point(field_mutable_list:CentralCluster.GetClusterInfoMessage.secondaryNodeGenericStatus)
  return &secondarynodegenericstatus_;
}

// repeated string secondaryNodeSpecificStatus = 12;
int GetClusterInfoMessage::secondarynodespecificstatus_size() const {
  return secondarynodespecificstatus_.size();
}
void GetClusterInfoMessage::clear_secondarynodespecificstatus() {
  secondarynodespecificstatus_.Clear();
}
const ::std::string& GetClusterInfoMessage::secondarynodespecificstatus(int index) const {
  // @@protoc_insertion_point(field_get:CentralCluster.GetClusterInfoMessage.secondaryNodeSpecificStatus)
  return secondarynodespecificstatus_.Get(index);
}
::std::string* GetClusterInfoMessage::mutable_secondarynodespecificstatus(int index) {
  // @@protoc_insertion_point(field_mutable:CentralCluster.GetClusterInfoMessage.secondaryNodeSpecificStatus)
  return secondarynodespecificstatus_.Mutable(index);
}
void GetClusterInfoMessage::set_secondarynodespecificstatus(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CentralCluster.GetClusterInfoMessage.secondaryNodeSpecificStatus)
  secondarynodespecificstatus_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void GetClusterInfoMessage::set_secondarynodespecificstatus(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:CentralCluster.GetClusterInfoMessage.secondaryNodeSpecificStatus)
  secondarynodespecificstatus_.Mutable(index)->assign(std::move(value));
}
#endif
void GetClusterInfoMessage::set_secondarynodespecificstatus(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  secondarynodespecificstatus_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CentralCluster.GetClusterInfoMessage.secondaryNodeSpecificStatus)
}
void GetClusterInfoMessage::set_secondarynodespecificstatus(int index, const char* value, size_t size) {
  secondarynodespecificstatus_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CentralCluster.GetClusterInfoMessage.secondaryNodeSpecificStatus)
}
::std::string* GetClusterInfoMessage::add_secondarynodespecificstatus() {
  // @@protoc_insertion_point(field_add_mutable:CentralCluster.GetClusterInfoMessage.secondaryNodeSpecificStatus)
  return secondarynodespecificstatus_.Add();
}
void GetClusterInfoMessage::add_secondarynodespecificstatus(const ::std::string& value) {
  secondarynodespecificstatus_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CentralCluster.GetClusterInfoMessage.secondaryNodeSpecificStatus)
}
#if LANG_CXX11
void GetClusterInfoMessage::add_secondarynodespecificstatus(::std::string&& value) {
  secondarynodespecificstatus_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:CentralCluster.GetClusterInfoMessage.secondaryNodeSpecificStatus)
}
#endif
void GetClusterInfoMessage::add_secondarynodespecificstatus(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  secondarynodespecificstatus_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CentralCluster.GetClusterInfoMessage.secondaryNodeSpecificStatus)
}
void GetClusterInfoMessage::add_secondarynodespecificstatus(const char* value, size_t size) {
  secondarynodespecificstatus_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CentralCluster.GetClusterInfoMessage.secondaryNodeSpecificStatus)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
GetClusterInfoMessage::secondarynodespecificstatus() const {
  // @@protoc_insertion_point(field_list:CentralCluster.GetClusterInfoMessage.secondaryNodeSpecificStatus)
  return secondarynodespecificstatus_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
GetClusterInfoMessage::mutable_secondarynodespecificstatus() {
  // @@protoc_insertion_point(field_mutable_list:CentralCluster.GetClusterInfoMessage.secondaryNodeSpecificStatus)
  return &secondarynodespecificstatus_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace CentralCluster

// @@protoc_insertion_point(global_scope)
