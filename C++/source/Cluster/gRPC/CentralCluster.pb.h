// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CentralCluster.proto

#ifndef PROTOBUF_CentralCluster_2eproto__INCLUDED
#define PROTOBUF_CentralCluster_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace CentralCluster {
class GetClusterInfoMessage;
class GetClusterInfoMessageDefaultTypeInternal;
extern GetClusterInfoMessageDefaultTypeInternal _GetClusterInfoMessage_default_instance_;
}  // namespace CentralCluster

namespace CentralCluster {

namespace protobuf_CentralCluster_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_CentralCluster_2eproto

// ===================================================================

class GetClusterInfoMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CentralCluster.GetClusterInfoMessage) */ {
 public:
  GetClusterInfoMessage();
  virtual ~GetClusterInfoMessage();

  GetClusterInfoMessage(const GetClusterInfoMessage& from);

  inline GetClusterInfoMessage& operator=(const GetClusterInfoMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetClusterInfoMessage(GetClusterInfoMessage&& from) noexcept
    : GetClusterInfoMessage() {
    *this = ::std::move(from);
  }

  inline GetClusterInfoMessage& operator=(GetClusterInfoMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetClusterInfoMessage& default_instance();

  static inline const GetClusterInfoMessage* internal_default_instance() {
    return reinterpret_cast<const GetClusterInfoMessage*>(
               &_GetClusterInfoMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(GetClusterInfoMessage* other);
  friend void swap(GetClusterInfoMessage& a, GetClusterInfoMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetClusterInfoMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  GetClusterInfoMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetClusterInfoMessage& from);
  void MergeFrom(const GetClusterInfoMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetClusterInfoMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string secondaryNodeIpAddresses = 8;
  int secondarynodeipaddresses_size() const;
  void clear_secondarynodeipaddresses();
  static const int kSecondaryNodeIpAddressesFieldNumber = 8;
  const ::std::string& secondarynodeipaddresses(int index) const;
  ::std::string* mutable_secondarynodeipaddresses(int index);
  void set_secondarynodeipaddresses(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_secondarynodeipaddresses(int index, ::std::string&& value);
  #endif
  void set_secondarynodeipaddresses(int index, const char* value);
  void set_secondarynodeipaddresses(int index, const char* value, size_t size);
  ::std::string* add_secondarynodeipaddresses();
  void add_secondarynodeipaddresses(const ::std::string& value);
  #if LANG_CXX11
  void add_secondarynodeipaddresses(::std::string&& value);
  #endif
  void add_secondarynodeipaddresses(const char* value);
  void add_secondarynodeipaddresses(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& secondarynodeipaddresses() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_secondarynodeipaddresses();

  // repeated fixed32 secondaryNodePorts = 9;
  int secondarynodeports_size() const;
  void clear_secondarynodeports();
  static const int kSecondaryNodePortsFieldNumber = 9;
  ::google::protobuf::uint32 secondarynodeports(int index) const;
  void set_secondarynodeports(int index, ::google::protobuf::uint32 value);
  void add_secondarynodeports(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      secondarynodeports() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_secondarynodeports();

  // repeated fixed32 secondaryNodeLocationIds = 10;
  int secondarynodelocationids_size() const;
  void clear_secondarynodelocationids();
  static const int kSecondaryNodeLocationIdsFieldNumber = 10;
  ::google::protobuf::uint32 secondarynodelocationids(int index) const;
  void set_secondarynodelocationids(int index, ::google::protobuf::uint32 value);
  void add_secondarynodelocationids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      secondarynodelocationids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_secondarynodelocationids();

  // repeated string secondaryNodeGenericStatus = 11;
  int secondarynodegenericstatus_size() const;
  void clear_secondarynodegenericstatus();
  static const int kSecondaryNodeGenericStatusFieldNumber = 11;
  const ::std::string& secondarynodegenericstatus(int index) const;
  ::std::string* mutable_secondarynodegenericstatus(int index);
  void set_secondarynodegenericstatus(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_secondarynodegenericstatus(int index, ::std::string&& value);
  #endif
  void set_secondarynodegenericstatus(int index, const char* value);
  void set_secondarynodegenericstatus(int index, const char* value, size_t size);
  ::std::string* add_secondarynodegenericstatus();
  void add_secondarynodegenericstatus(const ::std::string& value);
  #if LANG_CXX11
  void add_secondarynodegenericstatus(::std::string&& value);
  #endif
  void add_secondarynodegenericstatus(const char* value);
  void add_secondarynodegenericstatus(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& secondarynodegenericstatus() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_secondarynodegenericstatus();

  // repeated string secondaryNodeSpecificStatus = 12;
  int secondarynodespecificstatus_size() const;
  void clear_secondarynodespecificstatus();
  static const int kSecondaryNodeSpecificStatusFieldNumber = 12;
  const ::std::string& secondarynodespecificstatus(int index) const;
  ::std::string* mutable_secondarynodespecificstatus(int index);
  void set_secondarynodespecificstatus(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_secondarynodespecificstatus(int index, ::std::string&& value);
  #endif
  void set_secondarynodespecificstatus(int index, const char* value);
  void set_secondarynodespecificstatus(int index, const char* value, size_t size);
  ::std::string* add_secondarynodespecificstatus();
  void add_secondarynodespecificstatus(const ::std::string& value);
  #if LANG_CXX11
  void add_secondarynodespecificstatus(::std::string&& value);
  #endif
  void add_secondarynodespecificstatus(const char* value);
  void add_secondarynodespecificstatus(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& secondarynodespecificstatus() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_secondarynodespecificstatus();

  // string primaryNodeIpAddress = 2;
  void clear_primarynodeipaddress();
  static const int kPrimaryNodeIpAddressFieldNumber = 2;
  const ::std::string& primarynodeipaddress() const;
  void set_primarynodeipaddress(const ::std::string& value);
  #if LANG_CXX11
  void set_primarynodeipaddress(::std::string&& value);
  #endif
  void set_primarynodeipaddress(const char* value);
  void set_primarynodeipaddress(const char* value, size_t size);
  ::std::string* mutable_primarynodeipaddress();
  ::std::string* release_primarynodeipaddress();
  void set_allocated_primarynodeipaddress(::std::string* primarynodeipaddress);

  // string primaryNodeGenericStatus = 5;
  void clear_primarynodegenericstatus();
  static const int kPrimaryNodeGenericStatusFieldNumber = 5;
  const ::std::string& primarynodegenericstatus() const;
  void set_primarynodegenericstatus(const ::std::string& value);
  #if LANG_CXX11
  void set_primarynodegenericstatus(::std::string&& value);
  #endif
  void set_primarynodegenericstatus(const char* value);
  void set_primarynodegenericstatus(const char* value, size_t size);
  ::std::string* mutable_primarynodegenericstatus();
  ::std::string* release_primarynodegenericstatus();
  void set_allocated_primarynodegenericstatus(::std::string* primarynodegenericstatus);

  // string primaryNodeSpecificStatus = 6;
  void clear_primarynodespecificstatus();
  static const int kPrimaryNodeSpecificStatusFieldNumber = 6;
  const ::std::string& primarynodespecificstatus() const;
  void set_primarynodespecificstatus(const ::std::string& value);
  #if LANG_CXX11
  void set_primarynodespecificstatus(::std::string&& value);
  #endif
  void set_primarynodespecificstatus(const char* value);
  void set_primarynodespecificstatus(const char* value, size_t size);
  ::std::string* mutable_primarynodespecificstatus();
  ::std::string* release_primarynodespecificstatus();
  void set_allocated_primarynodespecificstatus(::std::string* primarynodespecificstatus);

  // bool clusterCreated = 1;
  void clear_clustercreated();
  static const int kClusterCreatedFieldNumber = 1;
  bool clustercreated() const;
  void set_clustercreated(bool value);

  // fixed32 primaryNodePort = 3;
  void clear_primarynodeport();
  static const int kPrimaryNodePortFieldNumber = 3;
  ::google::protobuf::uint32 primarynodeport() const;
  void set_primarynodeport(::google::protobuf::uint32 value);

  // fixed32 primaryNodeLocationId = 4;
  void clear_primarynodelocationid();
  static const int kPrimaryNodeLocationIdFieldNumber = 4;
  ::google::protobuf::uint32 primarynodelocationid() const;
  void set_primarynodelocationid(::google::protobuf::uint32 value);

  // fixed32 nSecondaryNodes = 7;
  void clear_nsecondarynodes();
  static const int kNSecondaryNodesFieldNumber = 7;
  ::google::protobuf::uint32 nsecondarynodes() const;
  void set_nsecondarynodes(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CentralCluster.GetClusterInfoMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> secondarynodeipaddresses_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > secondarynodeports_;
  mutable int _secondarynodeports_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > secondarynodelocationids_;
  mutable int _secondarynodelocationids_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> secondarynodegenericstatus_;
  ::google::protobuf::RepeatedPtrField< ::std::string> secondarynodespecificstatus_;
  ::google::protobuf::internal::ArenaStringPtr primarynodeipaddress_;
  ::google::protobuf::internal::ArenaStringPtr primarynodegenericstatus_;
  ::google::protobuf::internal::ArenaStringPtr primarynodespecificstatus_;
  bool clustercreated_;
  ::google::protobuf::uint32 primarynodeport_;
  ::google::protobuf::uint32 primarynodelocationid_;
  ::google::protobuf::uint32 nsecondarynodes_;
  mutable int _cached_size_;
  friend struct protobuf_CentralCluster_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GetClusterInfoMessage

// bool clusterCreated = 1;
inline void GetClusterInfoMessage::clear_clustercreated() {
  clustercreated_ = false;
}
inline bool GetClusterInfoMessage::clustercreated() const {
  // @@protoc_insertion_point(field_get:CentralCluster.GetClusterInfoMessage.clusterCreated)
  return clustercreated_;
}
inline void GetClusterInfoMessage::set_clustercreated(bool value) {
  
  clustercreated_ = value;
  // @@protoc_insertion_point(field_set:CentralCluster.GetClusterInfoMessage.clusterCreated)
}

// string primaryNodeIpAddress = 2;
inline void GetClusterInfoMessage::clear_primarynodeipaddress() {
  primarynodeipaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetClusterInfoMessage::primarynodeipaddress() const {
  // @@protoc_insertion_point(field_get:CentralCluster.GetClusterInfoMessage.primaryNodeIpAddress)
  return primarynodeipaddress_.GetNoArena();
}
inline void GetClusterInfoMessage::set_primarynodeipaddress(const ::std::string& value) {
  
  primarynodeipaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CentralCluster.GetClusterInfoMessage.primaryNodeIpAddress)
}
#if LANG_CXX11
inline void GetClusterInfoMessage::set_primarynodeipaddress(::std::string&& value) {
  
  primarynodeipaddress_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CentralCluster.GetClusterInfoMessage.primaryNodeIpAddress)
}
#endif
inline void GetClusterInfoMessage::set_primarynodeipaddress(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  primarynodeipaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CentralCluster.GetClusterInfoMessage.primaryNodeIpAddress)
}
inline void GetClusterInfoMessage::set_primarynodeipaddress(const char* value, size_t size) {
  
  primarynodeipaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CentralCluster.GetClusterInfoMessage.primaryNodeIpAddress)
}
inline ::std::string* GetClusterInfoMessage::mutable_primarynodeipaddress() {
  
  // @@protoc_insertion_point(field_mutable:CentralCluster.GetClusterInfoMessage.primaryNodeIpAddress)
  return primarynodeipaddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetClusterInfoMessage::release_primarynodeipaddress() {
  // @@protoc_insertion_point(field_release:CentralCluster.GetClusterInfoMessage.primaryNodeIpAddress)
  
  return primarynodeipaddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetClusterInfoMessage::set_allocated_primarynodeipaddress(::std::string* primarynodeipaddress) {
  if (primarynodeipaddress != NULL) {
    
  } else {
    
  }
  primarynodeipaddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), primarynodeipaddress);
  // @@protoc_insertion_point(field_set_allocated:CentralCluster.GetClusterInfoMessage.primaryNodeIpAddress)
}

// fixed32 primaryNodePort = 3;
inline void GetClusterInfoMessage::clear_primarynodeport() {
  primarynodeport_ = 0u;
}
inline ::google::protobuf::uint32 GetClusterInfoMessage::primarynodeport() const {
  // @@protoc_insertion_point(field_get:CentralCluster.GetClusterInfoMessage.primaryNodePort)
  return primarynodeport_;
}
inline void GetClusterInfoMessage::set_primarynodeport(::google::protobuf::uint32 value) {
  
  primarynodeport_ = value;
  // @@protoc_insertion_point(field_set:CentralCluster.GetClusterInfoMessage.primaryNodePort)
}

// fixed32 primaryNodeLocationId = 4;
inline void GetClusterInfoMessage::clear_primarynodelocationid() {
  primarynodelocationid_ = 0u;
}
inline ::google::protobuf::uint32 GetClusterInfoMessage::primarynodelocationid() const {
  // @@protoc_insertion_point(field_get:CentralCluster.GetClusterInfoMessage.primaryNodeLocationId)
  return primarynodelocationid_;
}
inline void GetClusterInfoMessage::set_primarynodelocationid(::google::protobuf::uint32 value) {
  
  primarynodelocationid_ = value;
  // @@protoc_insertion_point(field_set:CentralCluster.GetClusterInfoMessage.primaryNodeLocationId)
}

// string primaryNodeGenericStatus = 5;
inline void GetClusterInfoMessage::clear_primarynodegenericstatus() {
  primarynodegenericstatus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetClusterInfoMessage::primarynodegenericstatus() const {
  // @@protoc_insertion_point(field_get:CentralCluster.GetClusterInfoMessage.primaryNodeGenericStatus)
  return primarynodegenericstatus_.GetNoArena();
}
inline void GetClusterInfoMessage::set_primarynodegenericstatus(const ::std::string& value) {
  
  primarynodegenericstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CentralCluster.GetClusterInfoMessage.primaryNodeGenericStatus)
}
#if LANG_CXX11
inline void GetClusterInfoMessage::set_primarynodegenericstatus(::std::string&& value) {
  
  primarynodegenericstatus_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CentralCluster.GetClusterInfoMessage.primaryNodeGenericStatus)
}
#endif
inline void GetClusterInfoMessage::set_primarynodegenericstatus(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  primarynodegenericstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CentralCluster.GetClusterInfoMessage.primaryNodeGenericStatus)
}
inline void GetClusterInfoMessage::set_primarynodegenericstatus(const char* value, size_t size) {
  
  primarynodegenericstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CentralCluster.GetClusterInfoMessage.primaryNodeGenericStatus)
}
inline ::std::string* GetClusterInfoMessage::mutable_primarynodegenericstatus() {
  
  // @@protoc_insertion_point(field_mutable:CentralCluster.GetClusterInfoMessage.primaryNodeGenericStatus)
  return primarynodegenericstatus_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetClusterInfoMessage::release_primarynodegenericstatus() {
  // @@protoc_insertion_point(field_release:CentralCluster.GetClusterInfoMessage.primaryNodeGenericStatus)
  
  return primarynodegenericstatus_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetClusterInfoMessage::set_allocated_primarynodegenericstatus(::std::string* primarynodegenericstatus) {
  if (primarynodegenericstatus != NULL) {
    
  } else {
    
  }
  primarynodegenericstatus_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), primarynodegenericstatus);
  // @@protoc_insertion_point(field_set_allocated:CentralCluster.GetClusterInfoMessage.primaryNodeGenericStatus)
}

// string primaryNodeSpecificStatus = 6;
inline void GetClusterInfoMessage::clear_primarynodespecificstatus() {
  primarynodespecificstatus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetClusterInfoMessage::primarynodespecificstatus() const {
  // @@protoc_insertion_point(field_get:CentralCluster.GetClusterInfoMessage.primaryNodeSpecificStatus)
  return primarynodespecificstatus_.GetNoArena();
}
inline void GetClusterInfoMessage::set_primarynodespecificstatus(const ::std::string& value) {
  
  primarynodespecificstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CentralCluster.GetClusterInfoMessage.primaryNodeSpecificStatus)
}
#if LANG_CXX11
inline void GetClusterInfoMessage::set_primarynodespecificstatus(::std::string&& value) {
  
  primarynodespecificstatus_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CentralCluster.GetClusterInfoMessage.primaryNodeSpecificStatus)
}
#endif
inline void GetClusterInfoMessage::set_primarynodespecificstatus(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  primarynodespecificstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CentralCluster.GetClusterInfoMessage.primaryNodeSpecificStatus)
}
inline void GetClusterInfoMessage::set_primarynodespecificstatus(const char* value, size_t size) {
  
  primarynodespecificstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CentralCluster.GetClusterInfoMessage.primaryNodeSpecificStatus)
}
inline ::std::string* GetClusterInfoMessage::mutable_primarynodespecificstatus() {
  
  // @@protoc_insertion_point(field_mutable:CentralCluster.GetClusterInfoMessage.primaryNodeSpecificStatus)
  return primarynodespecificstatus_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetClusterInfoMessage::release_primarynodespecificstatus() {
  // @@protoc_insertion_point(field_release:CentralCluster.GetClusterInfoMessage.primaryNodeSpecificStatus)
  
  return primarynodespecificstatus_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetClusterInfoMessage::set_allocated_primarynodespecificstatus(::std::string* primarynodespecificstatus) {
  if (primarynodespecificstatus != NULL) {
    
  } else {
    
  }
  primarynodespecificstatus_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), primarynodespecificstatus);
  // @@protoc_insertion_point(field_set_allocated:CentralCluster.GetClusterInfoMessage.primaryNodeSpecificStatus)
}

// fixed32 nSecondaryNodes = 7;
inline void GetClusterInfoMessage::clear_nsecondarynodes() {
  nsecondarynodes_ = 0u;
}
inline ::google::protobuf::uint32 GetClusterInfoMessage::nsecondarynodes() const {
  // @@protoc_insertion_point(field_get:CentralCluster.GetClusterInfoMessage.nSecondaryNodes)
  return nsecondarynodes_;
}
inline void GetClusterInfoMessage::set_nsecondarynodes(::google::protobuf::uint32 value) {
  
  nsecondarynodes_ = value;
  // @@protoc_insertion_point(field_set:CentralCluster.GetClusterInfoMessage.nSecondaryNodes)
}

// repeated string secondaryNodeIpAddresses = 8;
inline int GetClusterInfoMessage::secondarynodeipaddresses_size() const {
  return secondarynodeipaddresses_.size();
}
inline void GetClusterInfoMessage::clear_secondarynodeipaddresses() {
  secondarynodeipaddresses_.Clear();
}
inline const ::std::string& GetClusterInfoMessage::secondarynodeipaddresses(int index) const {
  // @@protoc_insertion_point(field_get:CentralCluster.GetClusterInfoMessage.secondaryNodeIpAddresses)
  return secondarynodeipaddresses_.Get(index);
}
inline ::std::string* GetClusterInfoMessage::mutable_secondarynodeipaddresses(int index) {
  // @@protoc_insertion_point(field_mutable:CentralCluster.GetClusterInfoMessage.secondaryNodeIpAddresses)
  return secondarynodeipaddresses_.Mutable(index);
}
inline void GetClusterInfoMessage::set_secondarynodeipaddresses(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CentralCluster.GetClusterInfoMessage.secondaryNodeIpAddresses)
  secondarynodeipaddresses_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void GetClusterInfoMessage::set_secondarynodeipaddresses(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:CentralCluster.GetClusterInfoMessage.secondaryNodeIpAddresses)
  secondarynodeipaddresses_.Mutable(index)->assign(std::move(value));
}
#endif
inline void GetClusterInfoMessage::set_secondarynodeipaddresses(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  secondarynodeipaddresses_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CentralCluster.GetClusterInfoMessage.secondaryNodeIpAddresses)
}
inline void GetClusterInfoMessage::set_secondarynodeipaddresses(int index, const char* value, size_t size) {
  secondarynodeipaddresses_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CentralCluster.GetClusterInfoMessage.secondaryNodeIpAddresses)
}
inline ::std::string* GetClusterInfoMessage::add_secondarynodeipaddresses() {
  // @@protoc_insertion_point(field_add_mutable:CentralCluster.GetClusterInfoMessage.secondaryNodeIpAddresses)
  return secondarynodeipaddresses_.Add();
}
inline void GetClusterInfoMessage::add_secondarynodeipaddresses(const ::std::string& value) {
  secondarynodeipaddresses_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CentralCluster.GetClusterInfoMessage.secondaryNodeIpAddresses)
}
#if LANG_CXX11
inline void GetClusterInfoMessage::add_secondarynodeipaddresses(::std::string&& value) {
  secondarynodeipaddresses_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:CentralCluster.GetClusterInfoMessage.secondaryNodeIpAddresses)
}
#endif
inline void GetClusterInfoMessage::add_secondarynodeipaddresses(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  secondarynodeipaddresses_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CentralCluster.GetClusterInfoMessage.secondaryNodeIpAddresses)
}
inline void GetClusterInfoMessage::add_secondarynodeipaddresses(const char* value, size_t size) {
  secondarynodeipaddresses_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CentralCluster.GetClusterInfoMessage.secondaryNodeIpAddresses)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GetClusterInfoMessage::secondarynodeipaddresses() const {
  // @@protoc_insertion_point(field_list:CentralCluster.GetClusterInfoMessage.secondaryNodeIpAddresses)
  return secondarynodeipaddresses_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GetClusterInfoMessage::mutable_secondarynodeipaddresses() {
  // @@protoc_insertion_point(field_mutable_list:CentralCluster.GetClusterInfoMessage.secondaryNodeIpAddresses)
  return &secondarynodeipaddresses_;
}

// repeated fixed32 secondaryNodePorts = 9;
inline int GetClusterInfoMessage::secondarynodeports_size() const {
  return secondarynodeports_.size();
}
inline void GetClusterInfoMessage::clear_secondarynodeports() {
  secondarynodeports_.Clear();
}
inline ::google::protobuf::uint32 GetClusterInfoMessage::secondarynodeports(int index) const {
  // @@protoc_insertion_point(field_get:CentralCluster.GetClusterInfoMessage.secondaryNodePorts)
  return secondarynodeports_.Get(index);
}
inline void GetClusterInfoMessage::set_secondarynodeports(int index, ::google::protobuf::uint32 value) {
  secondarynodeports_.Set(index, value);
  // @@protoc_insertion_point(field_set:CentralCluster.GetClusterInfoMessage.secondaryNodePorts)
}
inline void GetClusterInfoMessage::add_secondarynodeports(::google::protobuf::uint32 value) {
  secondarynodeports_.Add(value);
  // @@protoc_insertion_point(field_add:CentralCluster.GetClusterInfoMessage.secondaryNodePorts)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetClusterInfoMessage::secondarynodeports() const {
  // @@protoc_insertion_point(field_list:CentralCluster.GetClusterInfoMessage.secondaryNodePorts)
  return secondarynodeports_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetClusterInfoMessage::mutable_secondarynodeports() {
  // @@protoc_insertion_point(field_mutable_list:CentralCluster.GetClusterInfoMessage.secondaryNodePorts)
  return &secondarynodeports_;
}

// repeated fixed32 secondaryNodeLocationIds = 10;
inline int GetClusterInfoMessage::secondarynodelocationids_size() const {
  return secondarynodelocationids_.size();
}
inline void GetClusterInfoMessage::clear_secondarynodelocationids() {
  secondarynodelocationids_.Clear();
}
inline ::google::protobuf::uint32 GetClusterInfoMessage::secondarynodelocationids(int index) const {
  // @@protoc_insertion_point(field_get:CentralCluster.GetClusterInfoMessage.secondaryNodeLocationIds)
  return secondarynodelocationids_.Get(index);
}
inline void GetClusterInfoMessage::set_secondarynodelocationids(int index, ::google::protobuf::uint32 value) {
  secondarynodelocationids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CentralCluster.GetClusterInfoMessage.secondaryNodeLocationIds)
}
inline void GetClusterInfoMessage::add_secondarynodelocationids(::google::protobuf::uint32 value) {
  secondarynodelocationids_.Add(value);
  // @@protoc_insertion_point(field_add:CentralCluster.GetClusterInfoMessage.secondaryNodeLocationIds)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetClusterInfoMessage::secondarynodelocationids() const {
  // @@protoc_insertion_point(field_list:CentralCluster.GetClusterInfoMessage.secondaryNodeLocationIds)
  return secondarynodelocationids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetClusterInfoMessage::mutable_secondarynodelocationids() {
  // @@protoc_insertion_point(field_mutable_list:CentralCluster.GetClusterInfoMessage.secondaryNodeLocationIds)
  return &secondarynodelocationids_;
}

// repeated string secondaryNodeGenericStatus = 11;
inline int GetClusterInfoMessage::secondarynodegenericstatus_size() const {
  return secondarynodegenericstatus_.size();
}
inline void GetClusterInfoMessage::clear_secondarynodegenericstatus() {
  secondarynodegenericstatus_.Clear();
}
inline const ::std::string& GetClusterInfoMessage::secondarynodegenericstatus(int index) const {
  // @@protoc_insertion_point(field_get:CentralCluster.GetClusterInfoMessage.secondaryNodeGenericStatus)
  return secondarynodegenericstatus_.Get(index);
}
inline ::std::string* GetClusterInfoMessage::mutable_secondarynodegenericstatus(int index) {
  // @@protoc_insertion_point(field_mutable:CentralCluster.GetClusterInfoMessage.secondaryNodeGenericStatus)
  return secondarynodegenericstatus_.Mutable(index);
}
inline void GetClusterInfoMessage::set_secondarynodegenericstatus(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CentralCluster.GetClusterInfoMessage.secondaryNodeGenericStatus)
  secondarynodegenericstatus_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void GetClusterInfoMessage::set_secondarynodegenericstatus(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:CentralCluster.GetClusterInfoMessage.secondaryNodeGenericStatus)
  secondarynodegenericstatus_.Mutable(index)->assign(std::move(value));
}
#endif
inline void GetClusterInfoMessage::set_secondarynodegenericstatus(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  secondarynodegenericstatus_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CentralCluster.GetClusterInfoMessage.secondaryNodeGenericStatus)
}
inline void GetClusterInfoMessage::set_secondarynodegenericstatus(int index, const char* value, size_t size) {
  secondarynodegenericstatus_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CentralCluster.GetClusterInfoMessage.secondaryNodeGenericStatus)
}
inline ::std::string* GetClusterInfoMessage::add_secondarynodegenericstatus() {
  // @@protoc_insertion_point(field_add_mutable:CentralCluster.GetClusterInfoMessage.secondaryNodeGenericStatus)
  return secondarynodegenericstatus_.Add();
}
inline void GetClusterInfoMessage::add_secondarynodegenericstatus(const ::std::string& value) {
  secondarynodegenericstatus_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CentralCluster.GetClusterInfoMessage.secondaryNodeGenericStatus)
}
#if LANG_CXX11
inline void GetClusterInfoMessage::add_secondarynodegenericstatus(::std::string&& value) {
  secondarynodegenericstatus_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:CentralCluster.GetClusterInfoMessage.secondaryNodeGenericStatus)
}
#endif
inline void GetClusterInfoMessage::add_secondarynodegenericstatus(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  secondarynodegenericstatus_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CentralCluster.GetClusterInfoMessage.secondaryNodeGenericStatus)
}
inline void GetClusterInfoMessage::add_secondarynodegenericstatus(const char* value, size_t size) {
  secondarynodegenericstatus_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CentralCluster.GetClusterInfoMessage.secondaryNodeGenericStatus)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GetClusterInfoMessage::secondarynodegenericstatus() const {
  // @@protoc_insertion_point(field_list:CentralCluster.GetClusterInfoMessage.secondaryNodeGenericStatus)
  return secondarynodegenericstatus_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GetClusterInfoMessage::mutable_secondarynodegenericstatus() {
  // @@protoc_insertion_point(field_mutable_list:CentralCluster.GetClusterInfoMessage.secondaryNodeGenericStatus)
  return &secondarynodegenericstatus_;
}

// repeated string secondaryNodeSpecificStatus = 12;
inline int GetClusterInfoMessage::secondarynodespecificstatus_size() const {
  return secondarynodespecificstatus_.size();
}
inline void GetClusterInfoMessage::clear_secondarynodespecificstatus() {
  secondarynodespecificstatus_.Clear();
}
inline const ::std::string& GetClusterInfoMessage::secondarynodespecificstatus(int index) const {
  // @@protoc_insertion_point(field_get:CentralCluster.GetClusterInfoMessage.secondaryNodeSpecificStatus)
  return secondarynodespecificstatus_.Get(index);
}
inline ::std::string* GetClusterInfoMessage::mutable_secondarynodespecificstatus(int index) {
  // @@protoc_insertion_point(field_mutable:CentralCluster.GetClusterInfoMessage.secondaryNodeSpecificStatus)
  return secondarynodespecificstatus_.Mutable(index);
}
inline void GetClusterInfoMessage::set_secondarynodespecificstatus(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CentralCluster.GetClusterInfoMessage.secondaryNodeSpecificStatus)
  secondarynodespecificstatus_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void GetClusterInfoMessage::set_secondarynodespecificstatus(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:CentralCluster.GetClusterInfoMessage.secondaryNodeSpecificStatus)
  secondarynodespecificstatus_.Mutable(index)->assign(std::move(value));
}
#endif
inline void GetClusterInfoMessage::set_secondarynodespecificstatus(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  secondarynodespecificstatus_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CentralCluster.GetClusterInfoMessage.secondaryNodeSpecificStatus)
}
inline void GetClusterInfoMessage::set_secondarynodespecificstatus(int index, const char* value, size_t size) {
  secondarynodespecificstatus_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CentralCluster.GetClusterInfoMessage.secondaryNodeSpecificStatus)
}
inline ::std::string* GetClusterInfoMessage::add_secondarynodespecificstatus() {
  // @@protoc_insertion_point(field_add_mutable:CentralCluster.GetClusterInfoMessage.secondaryNodeSpecificStatus)
  return secondarynodespecificstatus_.Add();
}
inline void GetClusterInfoMessage::add_secondarynodespecificstatus(const ::std::string& value) {
  secondarynodespecificstatus_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CentralCluster.GetClusterInfoMessage.secondaryNodeSpecificStatus)
}
#if LANG_CXX11
inline void GetClusterInfoMessage::add_secondarynodespecificstatus(::std::string&& value) {
  secondarynodespecificstatus_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:CentralCluster.GetClusterInfoMessage.secondaryNodeSpecificStatus)
}
#endif
inline void GetClusterInfoMessage::add_secondarynodespecificstatus(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  secondarynodespecificstatus_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CentralCluster.GetClusterInfoMessage.secondaryNodeSpecificStatus)
}
inline void GetClusterInfoMessage::add_secondarynodespecificstatus(const char* value, size_t size) {
  secondarynodespecificstatus_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CentralCluster.GetClusterInfoMessage.secondaryNodeSpecificStatus)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GetClusterInfoMessage::secondarynodespecificstatus() const {
  // @@protoc_insertion_point(field_list:CentralCluster.GetClusterInfoMessage.secondaryNodeSpecificStatus)
  return secondarynodespecificstatus_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GetClusterInfoMessage::mutable_secondarynodespecificstatus() {
  // @@protoc_insertion_point(field_mutable_list:CentralCluster.GetClusterInfoMessage.secondaryNodeSpecificStatus)
  return &secondarynodespecificstatus_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace CentralCluster

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CentralCluster_2eproto__INCLUDED
